<% autogen_exception -%>
package google

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceDnsManagedZone_basic(t *testing.T) {
	// TODO: https://github.com/hashicorp/terraform-provider-google/issues/14158
	SkipIfVcr(t)
	t.Parallel()

	VcrTest(t, resource.TestCase{
		PreCheck:     func() { AccTestPreCheck(t) },
		CheckDestroy: testAccCheckDNSManagedZoneDestroyProducerFramework(t),
		Steps: []resource.TestStep{
			{
				ExternalProviders: map[string]resource.ExternalProvider{
					"google": {
						VersionConstraint: "4.58.0",
						Source:            "hashicorp/google<%= "-" + version unless version == 'ga'  -%>",
					},
				},
				Config: testAccDataSourceDnsManagedZone_basic(RandString(t, 10)),
				Check: CheckDataSourceStateMatchesResourceStateWithIgnores(
					"data.google_dns_managed_zone.qa",
					"google_dns_managed_zone.foo",
					map[string]struct{}{
						"dnssec_config.#":                       {},
						"private_visibility_config.#":           {},
						"peering_config.#":                      {},
						"forwarding_config.#":                   {},
						"force_destroy":                         {},
						"labels.#":                              {},
						"creation_time":                         {},
						"cloud_logging_config.#":                {},
						"cloud_logging_config.0.%":              {},
						"cloud_logging_config.0.enable_logging": {},
<% unless version == "ga" -%>
						"reverse_lookup":                        {},
<% end -%>
					},
				),
			},
			{
				ProtoV5ProviderFactories: ProtoV5ProviderFactories(t),
				Config:                   testAccDataSourceDnsManagedZone_basic(RandString(t, 10)),
				Check: CheckDataSourceStateMatchesResourceStateWithIgnores(
					"data.google_dns_managed_zone.qa",
					"google_dns_managed_zone.foo",
					map[string]struct{}{
						"dnssec_config.#":                       {},
						"private_visibility_config.#":           {},
						"peering_config.#":                      {},
						"forwarding_config.#":                   {},
						"force_destroy":                         {},
						"labels.#":                              {},
						"creation_time":                         {},
						"cloud_logging_config.#":                {},
						"cloud_logging_config.0.%":              {},
						"cloud_logging_config.0.enable_logging": {},
<% unless version == "ga" -%>
						"reverse_lookup":                        {},
<% end -%>
					},
				),
			},
		},
	})
}

func testAccDataSourceDnsManagedZone_basic(managedZoneName string) string {
	return fmt.Sprintf(`
resource "google_dns_managed_zone" "foo" {
  name        = "tf-test-zone-%s"
  dns_name    = "tf-test-zone-%s.hashicorptest.com."
  description = "tf test DNS zone"
}

data "google_dns_managed_zone" "qa" {
  name = google_dns_managed_zone.foo.name
}
`, managedZoneName, managedZoneName)
}